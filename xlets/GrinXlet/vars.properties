
#
#  Properties that drive the build for this project.  To set up a new
#  project, copy build.xml and vars.properties from 
#  <hd cookbook>/xlets/grin_samples/GenericGame, and modify vars.properties
#  to include settings for your xlet.  If needed, you can also create a
#  file called "user.vars.properites" that you don't check into the
#  repository.  This lets you override settings in vars.proprties, so
#  you can set individual settings for things like the location of the
#  compilation stubs.
#
#  Your directory structure can be set up like this:
#
#    src	Source for your game's xlet.  The show file should be
#		in this directory, and there should be subdirectories for
#		any java packages you put your game classes in.
#
#    src/<xlet show>.txt
#		The GRIN show file for your game
#
#    src/images Any image assets you need
#
#    src/fonts  Any fonts your xlet needs, plus the dvb.fontindex file.
#
#    xlet_src   Any classes that should be included only in the xlet
#		version of your game.  This might include some kind
#		of PlayerWrangler class to control BD player functions.
#
#    se_src     Any JavaSE classes needed at build time or for the grinview
#		version of your game, e.g. for an extensions parser.  This
#		might include a stubbed-out version of your PlayerWrangler
#		class.

#
# Games have two external dependencies:  the HD cookbook repository,
# and the classes.zip file that contain compilation stubs.  For a
# stand-alone project, these need to be set appropriately.
#

    # The location of the HD cookbook repository.   This can be an absolute
    # path, if that's easier.
cookbook.dir=${basedir}/../../..

    # The location of the BD-J platform compilation stubs.  This can be
    # an absolute path, if that's easier.
bdj.classes=${cookbook.dir}/lib/classes.zip

#
# Next, we have a set of properties to configure the generic build to this
# project.  You should change these properties to customize the build for
# your xlet.  If project.name is blank, the standard build will give you
# an error message telling you to set up vars.properties.
#

    # A descriptive name of the project.  This probably shouldn't include
    # spaces.
project.name=

    #  Setting of whether you want a build with or without debugging
    #  features, like logging and assetions.  Set to "debug" or to "deploy"
    #  to control the build.
debug.or.deploy=debug

    # The name of the show file that defines the scene graph used for your
    # game.  This should not include the ".txt" extension.
show.file=show_file_for_my_game

    # The name of the mosaics file that sets up image mosaics, if there is
    # one.  If there is one, it should not include the ".txt" extension.
    # If there isn't a mosaics file, leave this property undefined.
# mosaics.file=mosaics_file_for_my_game

    #  The fully-qualified class name of the extension parser for this
    #  show, if there is one.  If there isn't one, leave this property
    #  undefined.
# extension.parser=com.something.MyExtensionParser

    # The base directory of where the show file and other assets are
    # located.  You might define this so the show file is in the same 
    # source directory as its director, if your director is in a
    # sub-package.
asset.dir=src

    # A second directory to search for assets other than the show file.
    # this can be useful for images that are shared among multiple projects.
    # Leave undefined if not used.
# asset.dir.2=

    # The initial segment of the show.
show.initial.segment=S:Initialize

    # The fully qualified class name of the director class that your show file
    # uses.  This is the entry point for your game.
show.director=com.something.MyGameDirector

    # The name of the java_commands class defined in your show file.  This
    # is mandatory, but it allows you to use java_command within your game,
    # which is handy.
show.commands=com.something.MyShowCommands

    # A ZIP file containing Java libraires to be included with the xlet.
    # Leave undefined if you don't have a library.
# xlet.lib.zip=

    # A ZIP file containing Java libraries to be included with the SE
    # builds, like grinview.  Leave undefined if you don't have a library.
# se.lib.zip=

    # A colon-separated list of source directories to be included in the
    # xlet build.  Leave undefined if you have no source libraries.
# xlet.lib.src=

    # A colon-separated list of source directories to be included in the
    # SE builds, like grinview and the compiler.  Leave undefined if
    # you have no source libraries.
# se.lib.src=

    # The name of the main xlet class, if you define your own xlet subclass.
    # Leave undefined to use the default of com.hdcookbook.grinxlet.GrinXlet
# xlet.class.name=

# fonts...
    # If your disc includes fonts, put the .otf and the dvb.fontindex file
    # in src/fonts.  The generic_build.xml file will detect this, copy them
    # to the disc image, and set a run-time flag to the GRIN xlet causing
    # it to create a DVBFontFactory.

    # Mouse support...  Set this "true" if you want mouse events delivered
    # to your xlet.
xlet.mouse.wanted=false

    #  Finally, a set of self-explanatory properties that set up bits of the
    #  disc structure.
bdjo.name=00000
disc.id=00000000000000000000000000000001
disc.orgid=7fff0001
xlet.orgid=7fff0001
xlet.appid=4000
xlet.jar=${build.dir}/00000.jar


#
# Next, some directory names within the project.  You can change these
# if you want, but it's not necessary.
#

dist.dir=dist
build.dir=build
src.dir=src
build.dir=build
bdjo-desc-file=${build.dir}/${bdjo.name}.xml

# GrinViewer arguments to append.
grinview.args.extra=

#
# Finally, we set up the paths of various tools used for the build.  Normally,
# you won't need to change these.
#
bin.dir=${cookbook.dir}/bin
converter.jar=${bin.dir}/grincompiler.jar
grinview.jar=${bin.dir}/grinviewer.jar
bdjo.jar=${bin.dir}/bdjo.jar
security.jar=${bin.dir}/security.jar
id.jar=${bin.dir}/id.jar
index.jar=${bin.dir}/index.jar
movieobject.jar=${bin.dir}/movieobject.jar
bouncycastle.jar=${bin.dir}/bcprov-jdk15-137.jar
grin.library.src.dir=${cookbook.dir}/AuthoringTools/grin/library/src
grin.xlet=${cookbook.dir}/xlets/GrinXlet


