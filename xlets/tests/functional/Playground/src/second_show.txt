#
#  A second show file that just displays some text.  This is put above
#  the first show file in the animator, in order to demonstrate that
#  adding and removing shows from the animator works.
#


show

setting binary_grin_file second_show.grn ;

exports
    segments { 
        S:Initialize 
        S:ExtensionTest
    } features {
    } handlers {
    }
;

segment S:Initialize
    setup {
        F:Everything
    } setup_done {
        sync_display ;
        activate_segment S:Main ;
    }
;

segment S:Main 
    active {
        F:MainText
    } setup {
        F:Everything
    }
;

feature group F:Everything {
    F:MainText
} ;

feature src_over F:MainText F:MainText.Text ;

feature text F:MainText.Text
        left 250 top 250 {
            "This text"
            "is displayed"
            "over the menu"
            "and is in a"
            "second show"
        }
        SansSerif plain 96 { 
            { 0 255 0 255 }
            + + + + + + + +
            + + + + + + + +
            + + + + + + + +
            + + + + + + + +
            { 0 255 0 250 }
            { 0 255 0 240 }
            { 0 255 0 230 }
            { 0 255 0 220 }
            { 0 255 0 210 }
            { 0 255 0 200 }
            { 0 255 0 190 }
            { 0 255 0 180 }
            { 0 255 0 170 }
            { 0 255 0 160 }
            { 0 255 0 150 }
            { 0 255 0 140 }
            { 0 255 0 130 }
            { 0 255 0 120 }
            { 0 255 0 110 }
            { 0 255 0 90 }
            { 0 255 0 80 }
            { 0 255 0 70 }
            { 0 255 0 60 }
            { 0 255 0 50 }
            { 0 255 0 40 }
            { 0 255 0 30 }
            { 0 255 0 20 }
            { 0 255 0 10 }
            { 0 255 0 0 }
            + + + + + + + +
            + + + + + + + +
            + + + + + + + +
            + + + + + + + +
            { 0 255 0 10 }
            { 0 255 0 20 }
            { 0 255 0 30 }
            { 0 255 0 40 }
            { 0 255 0 50 }
            { 0 255 0 60 }
            { 0 255 0 70 }
            { 0 255 0 80 }
            { 0 255 0 90 }
            { 0 255 0 110 }
            { 0 255 0 120 }
            { 0 255 0 130 }
            { 0 255 0 140 }
            { 0 255 0 150 }
            { 0 255 0 160 }
            { 0 255 0 170 }
            { 0 255 0 180 }
            { 0 255 0 190 }
            { 0 255 0 200 }
            { 0 255 0 210 }
            { 0 255 0 220 }
            { 0 255 0 230 }
            { 0 255 0 240 }
            { 0 255 0 250 }
        } loop_count infinite
        background { 0 0 200 50 } 
;


#
#  Now, a test of an extension feature without a java_command_class
#  in the show.  This forces the .grin file to contain the
#  fully-qualified name of the extension class.
#
# In bouncing_arg, this also tests a Feature that, at compile time,
# is decomposed into a graph of features.  See SEBouncingArc.java for
# details.
#

segment S:ExtensionTest 
    setup {
        F:ArcTest
        F:BouncingArcTest
    } setup_done {
        activate_segment S:ExtensionTest.Showing ;
    }
;

segment S:ExtensionTest.Showing
    active {
        F:ArcTest
        F:BouncingArcTest
    }
;

feature extension Playground:arc F:ArcTest
        { 255 0 0 255 }         # Red
        x 200 y 400 width 600 height 300 startAngle 45 arcAngle 315
;


feature extension Playground:bouncing_arc F:BouncingArcTest
        { 255 0 0 255 }         # Red
        x 1000 y 100 width 600 height 300 startAngle 180 arcAngle 315
        bounceHeight 600 bouncePeriod 48
;



end_show 
